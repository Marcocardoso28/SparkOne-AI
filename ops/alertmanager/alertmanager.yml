route:
  receiver: "default"
  group_by: ["alertname", "service"]
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 4h
  routes:
    - matchers:
        - severity = "critical"
      receiver: "critical"
      repeat_interval: 1h

receivers:
  - name: "default"
    slack_configs:
      - api_url: ${SLACK_ALERT_WEBHOOK}
        channel: "#sparkone-alerts"
        icon_emoji: ":rotating_light:"
        username: "SparkOne Alertmanager"
        send_resolved: true
        title: "{{ .CommonAnnotations.summary }}"
        text: >-
          *Descrição:* {{ .CommonAnnotations.description }}
          *Severidade:* {{ .CommonLabels.severity }}
          *Serviço:* {{ .CommonLabels.service }}
          {{- range .Alerts }}
          • *Início:* {{ .StartsAt }} — *Labels:* {{ .Labels }}
          {{- end }}
  - name: "critical"
    slack_configs:
      - api_url: ${SLACK_ALERT_WEBHOOK}
        channel: "#sparkone-critical"
        icon_emoji: ":fire:"
        username: "SparkOne Critical Alerts"
        send_resolved: true
        title: "CRÍTICO: {{ .CommonAnnotations.summary }}"
        text: >-
          {{ range .Alerts }}
          • *{{ .Labels.instance }}* — {{ .Annotations.description }}
          {{ end }}

inhibit_rules:
  - source_matchers:
      - severity = "critical"
    target_matchers:
      - severity = "warning"
    equal: ["alertname", "service"]
